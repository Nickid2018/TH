buildscript {
    repositories {
        flatDir dirs: "../../jcp/target"
    }
    dependencies {
        classpath "com.igormaznitsa:jcp:7.0.5"
    }
}

plugins {
    id 'java'
}

apply plugin: 'application'
apply plugin: 'com.igormaznitsa.jcp'

group 'io.github.nickid2018'
version '1.0-SNAPSHOT'
project.ext.lwjglVersion = '3.3.1'
mainClassName = 'io.github.nickid2018.th.TH'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://libraries.minecraft.net"
    }
}

dependencies {
    implementation "org.lwjgl:lwjgl:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    implementation "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    runtimeOnly "org.lwjgl:lwjgl:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-windows"
    runtimeOnly "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-windows"
    implementation 'org.joml:joml:1.10.4'
    implementation 'com.madgag:animated-gif-lib:1.4'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'it.unimi.dsi:fastutil:8.5.9'
    implementation 'org.apache.commons:commons-collections4:4.4'

    implementation 'org.ow2.asm:asm:9.4'
    implementation 'org.openjdk.nashorn:nashorn-core:15.4'
    implementation 'com.github.oshi:oshi-core:6.3.1'
    implementation 'com.mojang:datafixerupper:5.0.28'

    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

preprocess {
    sources = sourceSets.main.java.srcDirs
    allowWhitespaces = true
    eol = '\r\n'
    keepAttributes = true
    sourceEncoding = 'UTF-8'
    targetEncoding = 'UTF-8'
    ignoreMissingSources = false
    excludeExtensions = ['txt', 'xml']
    fileExtensions = ['java']
    unknownVarAsFalse = false
    dryRun = false
    verbose = true
    clearTarget = true
    careForLastEol = true
    keepComments = true
    keepLines = true
    allowWhitespaces = true
    preserveIndents = true
    dontOverwriteSameContent = false
    configFiles = ['jcpconfig.txt']
}
task(changeSourceFolder) {
    if (project.gradle.startParameter.taskNames.size() > 0)
        sourceSets.main.java.srcDirs = [preprocess.target]
}.dependsOn preprocess

compileJava.dependsOn preprocess

clean {
    delete 'preprocessed-path'
}

test {
    useJUnitPlatform()
}